version: '3.8'

services:
  rag-api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      # Mount directories for persistent storage
      - ./uploads:/app/uploads
      - ./rag_storage:/app/rag_storage
      - ./input:/app/input
      - ./output:/app/output
    environment:
      # Copy environment variables from .env file
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL}
      - OPENAI_LLM_MODEL=${OPENAI_LLM_MODEL}
      - OPENAI_VISION_MODEL=${OPENAI_VISION_MODEL}
      - WORKING_DIR=/app/rag_storage
      - UPLOAD_DIR=/app/uploads
      - PARSER=${PARSER:-docling}
      - LIGHTRAG_ENABLED=${LIGHTRAG_ENABLED:-true}
      - MAX_FILE_SIZE_MB=${MAX_FILE_SIZE_MB:-100}
      - MAX_WORKERS=${MAX_WORKERS:-4}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # Optional: Neo4j for graph database (uncomment if needed)
  # neo4j:
  #   image: neo4j:5.0-community
  #   ports:
  #     - "7474:7474"  # HTTP
  #     - "7687:7687"  # Bolt
  #   environment:
  #     - NEO4J_AUTH=neo4j/password
  #   volumes:
  #     - neo4j_data:/data
  #   restart: unless-stopped

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

  # Optional: Qdrant for vector database (uncomment if needed)
  # qdrant:
  #   image: qdrant/qdrant:v1.6.0
  #   ports:
  #     - "6333:6333"
  #   volumes:
  #     - qdrant_data:/qdrant/storage
  #   restart: unless-stopped

# Uncomment if using external databases
# volumes:
#   neo4j_data:
#   redis_data:
#   qdrant_data:
